#!/bin/bash

set -eu

PRE_BUILD_DIR="${PWD}/functions/_image"
BUILD_DIR="${PWD}/functions/_image/out"
DOCKERFILE="${PWD}/functions/_image/Dockerfile"
FILESYSTEM_TARGET="/filesystems/alpine.ext4"
KEY_FILE="alpine"
IMAGE_TAG="uberbase/alpine:latest"

echo "Generating a keypair..."
if [ ! -f "${HOME}/.ssh/${KEY_FILE}" ]; then
        set +e
        ssh-keygen -t rsa -b 4096 -C "alpine@firecracker" -f "${HOME}/.ssh/${KEY_FILE}"
        set -e
fi

echo "Creating build directory..."
rm -rf "${BUILD_DIR}"
mkdir -p "${BUILD_DIR}" && cd "${BUILD_DIR}"

echo "Copying public key to the build directory..."
cp "${HOME}/.ssh/${KEY_FILE}.pub" "${BUILD_DIR}/key.pub"

cd "${PRE_BUILD_DIR}"

echo "Building Docker image..."
cp "${DOCKERFILE}" "${BUILD_DIR}/Dockerfile"
docker build -t "${IMAGE_TAG}" "${BUILD_DIR}"
retVal=$?

if [ $retVal -ne 0 ]; then
        echo " ==> build failed with status $?"
        exit $retVal
fi

echo "Creating file system..."
qemu-img create -f raw "${BUILD_DIR}/alpine-base.ext4" 800M
mkfs.ext4 "${BUILD_DIR}/alpine-base.ext4"
mkdir -p "${BUILD_DIR}/fsmnt"
mount "${BUILD_DIR}/alpine-base.ext4" ${BUILD_DIR}/fsmnt

echo "Starting container from new image ${IMAGE_TAG}..."
CONTAINER_ID=$(docker run --rm -v ${BUILD_DIR}/fsmnt:/export-rootfs -td ${IMAGE_TAG} /bin/sh)

# docker run --rm -v ${BUILD_DIR}/fsmnt:/export-rootfs -td ${IMAGE_TAG} bin/sh -C ifconfig eth0 up && ip addr add dev eth0 ${TAP_IP}/16 && ip route 
# docker run --rm -v ${BUILD_DIR}/fsmnt:/export-rootfs -td ${IMAGE_TAG} bin/sh -C add default via ${FC_IP} && echo "nameserver 8.8.8.8" > /etc/resolv.conf

echo "Copying Docker file system..."
docker cp $CONTAINER_ID:/ ${BUILD_DIR}/fsmnt

echo "Unmounting file system..."
umount "${BUILD_DIR}/fsmnt"

echo "Removing docker container..."
docker stop $CONTAINER_ID

echo "Moving file system..."
mv "${BUILD_DIR}/alpine-base.ext4" "${FILESYSTEM_TARGET}"

echo "Cleaning up build directory..."
rm -r "${BUILD_DIR}"

echo "Removing Docker image..."
docker rmi ${IMAGE_TAG}

echo " \\o/ File system written to ${FILESYSTEM_TARGET}."
