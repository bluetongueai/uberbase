name: k8

volumes:
  uberbase_data:
  podman_data:


networks:
  network_public:
    driver: bridge

services:
  uberbase:
    image: bluetongueai/uberbase:latest
    container_name: uberbase
    hostname: uberbase
    user: podman
    environment:
      - FUSIONAUTH_APP_RUNTIME_MODE=production
    env_file:
      - ${PWD}/../.env
    volumes:
      - ${PWD}/../.env:/home/podman/app/.env
      - ${PWD}/uberbase/caddy:/home/podman/app/configs/caddy
      - ${PWD}/uberbase/fusionauth:/home/podman/app/configs/fusionauth
      - ${PWD}/uberbase/postgrest:/home/podman/app/configs/postgrest
      - ${PWD}/uberbase/kamal:/home/podman/app/configs/kamal
      - ${PWD}/logs:/home/podman/app/logs:z
      - uberbase_data:/home/podman/app/data
      - podman_data:/var/lib/containers:z
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:6000/health" ]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 60s
    networks:
      - network_public
    ports:
      - 80:80
      - 443:443

  proxy:
    image: bluetongueai/proxy:latest
    container_name: proxy
    hostname: proxy
    user: k8
    build:
      context: ../
      target: k8-proxy
    env_file:
      - ${PWD}/../.env
    volumes:
      #- ${PWD}/../k8:/app/k8
      - ${PWD}/static:/app/server/static
    entrypoint: "/app/bin/proxy"
    networks:
      - network_public
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8000:8000
  
  website:
    image: bluetongueai/website:latest
    container_name: website
    hostname: website
    build:
      dockerfile: website/Dockerfile
      target: runner
      args:
        - K8_POSTGREST_URL=${K8_POSTGREST_URL}
        - K8_FUSIONAUTH_API_KEY=${K8_FUSIONAUTH_API_KEY}
        - K8_FUSIONAUTH_APP_URL=${K8_FUSIONAUTH_APP_URL}
        - K8_FUSIONAUTH_TENANT_ID=${K8_FUSIONAUTH_TENANT_ID}
        - K8_FUSIONAUTH_APPLICATION_ID=${K8_FUSIONAUTH_APPLICATION_ID}
        - K8_STRIPE_API_KEY=${K8_STRIPE_API_KEY}
        - K8_STRIPE_WEBHOOK_SECRET=${K8_STRIPE_WEBHOOK_SECRET}
    env_file:
      - ../.env
    networks:
      - network_public
    ports:
      - 3000:3000
