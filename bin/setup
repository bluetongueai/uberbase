#! /bin/bash

source .env

# if the system is already bootstrapped, exit
if [ "$UBERBASE_BOOTSTRAPPED" = "true" ]; then
  exit 0
fi

ARCH=$(uname -m)

# download firecracker kernel, rootfs and ssh key
[ -e /var/lib/firecracker-containerd/runtime/hello-vmlinux.bin ] || curl -fsSL -o /var/lib/firecracker-containerd/runtime/hello-vmlinux.bin https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/x86_64/kernels/vmlinux.bin

# build firecracker-containerd
git clone --recurse-submodules https://github.com/firecracker-microvm/firecracker-containerd
pushd firecracker-containerd
echo "building firecracker-containerd"
sed -i 's/grep -Po/grep -Eo/g' Makefile
make all
echo "installing firecracker-containerd"
make install
popd

# create a 20GB thin pool using loop devices (dev only, not for production)
has_thinpool=$(lvdisplay -C | grep containerd-thinpool)
if [ -n "$has_thinpool" ]; then
  echo "thin pool already exists"
else
  echo "creating thin pool"
  if [ -e ${PWD}/data/lvm ]; then
    fallocate -l 20G ${PWD}/data/lvm
  fi
  modprobe dm_thin_pool
  lo_dev=$(losetup -f)
  losetup $lo_dev ${PWD}/data/lvm
  vgcreate vg0 $lo_dev
  lvcreate -L 18G --thinpool containerd-thinpool vg0
fi
vgchange -a y

# start firecracker-containerd
echo "starting docker"
dockerd 2>/dev/null &
sleep 5

# finish firecracker-containerd install
echo 
pushd firecracker-containerd
echo "building default rootfs for firecracker"
make image
cp tools/image-builder/rootfs.img /var/lib/firecracker-containerd/runtime/default-rootfs.img
echo "building firecracker"
make firecracker
echo "installing firecracker"
make install-firecracker
echo "installing CNI networking plugins"
make demo-network
popd

# shut down firecracker-containerd
echo "shutting down dockerd"
ps aux | grep dockerd | grep -v grep | awk '{print $1}' | xargs kill -9

# create firecracker-containerd contexts and configure
#firecracker-ctr --address /run/firecracker-containerd/containerd.sock namespaces create fc
#firecracker-ctr --address /run/firecracker-containerd/containerd.sock namespaces label fc containerd.io/defaults/runtime=aws.firecracker containerd.io/defaults/snapshotter=devmapper

export UBERBASE_BOOTSTRAPPED=true
# printf "\n##\n# Bootstrapped!\nexport UBERBASE_BOOTSTRAPPED=true" >> .env
