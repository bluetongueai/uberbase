#! /bin/bash

source .env

# colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
ORANGE='\033[0;33m]'
NC='\033[0m'

# multiline string
remote_cmd=$(cat <<EOF
# Set up a login terminal on the serial console (ttyS0):
ln -s agetty /etc/init.d/agetty.ttyS0
echo ttyS0 > /etc/securetty
rc-update add agetty.ttyS0 default

# Make sure special file systems are mounted on boot:
rc-update add devfs boot
rc-update add procfs boot
rc-update add sysfs boot

# Then, copy the newly configured system to the rootfs image:
for d in bin etc lib root sbin usr; do tar c "/$d" | tar x -C /rootfs; done

# The above command may trigger the following message:
# tar: Removing leading "/" from member names
# However, this is just a warning, so you should be able to
# proceed with the setup process.

for dir in dev proc run sys var; do mkdir /rootfs/${dir}; done
EOF
)


# build a filesystem
cd /filesystems
echo -e "${YELLOW}Building filesystem.$NC"
dd if=/dev/zero of=rootfs.ext4 bs=1M count=${UBERBASE_VM_STORAGE_MB}
mkfs.ext4 rootfs.ext4
mkdir -p /tmp/rootfs
mount -o loop rootfs.ext4 ./tmp/rootfs
docker run --rm -v /tmp/rootfs:/rootfs alpine sh -c "apk add openrc util-linux"
docker run --rm -v /tmp/rootfs:/rootfs alpine sh -c "$remote_cmd"

# create the base alpine docker image
echo -e "${YELLOW}Creating docker image.$NC"
tar -C /tmp/rootfs -c . | docker import - tgittos/firecracker-microvm-x86_64-5.10-alpine:latest

umount /tmp/rootfs

echo -e "${GREEN}Done.$NC"
