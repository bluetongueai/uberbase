#! /bin/bash

USER=uberbase
PASSWORD=socratic1!
VM_HOST=192.168.66.4

# if env RUNNING_BOOTSTRAP is not set, ssh into the machine and run this script
# while setting the env variable
# if the env variable is set, run the script below
if [ -z "$RUNNING_BOOTSTRAP" ]; then
  ssh -i ./keys/supabase-dev -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$VM_HOST "export RUNNING_BOOTSTRAP=true; export PASSWORD="$PASSWORD"; /mnt/host/src/uberbase/bin/configure/guest"
  exit 0
fi

echo "$PASSWORD" | sudo -S su root
echo -e "\033[1;33mInstalling essentials...\033[0m"
sudo apt -y install build-essential curl tar unzip openssh-server ufw golang git

# install docker
cd /mnt/host/src/uberbase
echo -e "\033[1;33mInstalling Docker...\033[0m"
sudo apt install -y ca-certificates curl wget
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

sudo echo "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "bookworm") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

echo -e "\033[1;33mAdding user to docker group...\033[0m"
sudo usermod -aG docker uberbase

# configure firewall to allow connections on 8080
echo -e "\033[1;33mConfiguring firewall...\033[0m"
sudo ufw allow 8080

# install vs code server
echo -e "\033[1;33mSetting up code server...\033[0m"
sudo wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
sudo echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
sudo rm -f packages.microsoft.gpg

sudo apt install -y apt-transport-https
sudo apt update
sudo apt install -y code 

# run code server as a service, command is "code tunnel"
cat <<EOF | sudo tee /etc/systemd/system/vscode-server.service > /dev/null
[Unit]
Description=VS Code Server
After=network.target
StartLimitIntervalSec=0
[Service]
Type=simple
Restart=always
RestartSec=1
User=uberbase
ExecStart=/usr/bin/code tunnel
[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable vscode-server
sudo systemctl start vscode-server
